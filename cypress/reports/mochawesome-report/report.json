{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 9,
    "pending": 1,
    "failures": 0,
    "start": "2021-05-07T11:37:05.688Z",
    "end": "2021-05-07T11:38:19.337Z",
    "duration": 73649,
    "testsRegistered": 11,
    "passPercent": 90,
    "pendingPercent": 9.090909090909092,
    "other": 1,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "7d304236-0134-4388-882a-e4e741d4877c",
      "title": "",
      "fullFile": "cypress/integration/myTests/test.js",
      "file": "cypress/integration/myTests/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d69bac9-078b-4013-be72-c575cc5b985c",
          "title": "Automation Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
              "title": "Registration",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "with valid data",
                  "fullTitle": "Automation Test Suite Registration with valid data",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "672c9d44-370f-4045-a0b3-35ff9c5e6384",
                  "parentUUID": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with incorrect e-mail",
                  "fullTitle": "Automation Test Suite Registration try with incorrect e-mail",
                  "timedOut": null,
                  "duration": 23885,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getRegUserName().type(generator.randomString(10));\n  myAccount.getRegEmail().type(`${generator.randomString(10)}@${generator.randomString(1)}`);\n  myAccount.getRegPassword().type(data.Password);\n  myAccount.getRegisterButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Error: Please provide a valid email address.');\n  });\n});",
                  "err": {},
                  "uuid": "0d1a8c5e-2e4d-4627-b88f-1b112dda5369",
                  "parentUUID": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with incorrect password",
                  "fullTitle": "Automation Test Suite Registration try with incorrect password",
                  "timedOut": null,
                  "duration": 6704,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\nmyAccount.getRegUserName().type(generator.randomString(10));\nmyAccount.getRegEmail().type(`${generator.randomString(10)}@${generator.randomString(1)}.${generator.randomString(2)}`);\nmyAccount.getRegPassword().type(generator.randomString(4)).then(() => {\n  myAccount.getRegisterButton().should('have.attr', 'disabled', 'disabled');\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<button.woocommerce-Button.woocommerce-button.button.woocommerce-form-register__submit>' to have attribute 'disabled'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<button.woocommerce-Button.woocommerce-button.button.woocommerce-form-register__submit>' to have attribute 'disabled'\n    at Context.eval (https://shop.demoqa.com/__cypress/tests?p=cypress\\integration\\myTests\\test.js:158:39)",
                    "diff": null
                  },
                  "uuid": "28f0a147-5c58-44d3-9869-9db119a24ee6",
                  "parentUUID": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with blank password",
                  "fullTitle": "Automation Test Suite Registration try with blank password",
                  "timedOut": null,
                  "duration": 3185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\nmyAccount.getRegUserName().type(generator.randomString(10));\nmyAccount.getRegEmail().type(`${generator.randomString(10)}@${generator.randomString(1)}.${generator.randomString(2)}`);\nmyAccount.getRegisterButton().click();\nmyAccount.getRegisterError().invoke('text').then(text => {\n  cy.expect(text.trim()).to.equal('Error: Please enter an account password.');\n});",
                  "err": {},
                  "uuid": "bd68c77a-4304-484e-a5dd-50ad7b367f52",
                  "parentUUID": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with blank e-mail adress",
                  "fullTitle": "Automation Test Suite Registration try with blank e-mail adress",
                  "timedOut": null,
                  "duration": 3354,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getRegUserName().type(generator.randomString(10));\n  myAccount.getRegPassword().type(data.Password);\n  myAccount.getRegisterButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Error: Please provide a valid email address.');\n  });\n});",
                  "err": {},
                  "uuid": "f855cd23-17d9-4d63-a440-b9fd27a7680a",
                  "parentUUID": "4ff40e2a-992e-4c63-a313-b0c75ba26bcd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d1a8c5e-2e4d-4627-b88f-1b112dda5369",
                "bd68c77a-4304-484e-a5dd-50ad7b367f52",
                "f855cd23-17d9-4d63-a440-b9fd27a7680a"
              ],
              "failures": [
                "28f0a147-5c58-44d3-9869-9db119a24ee6"
              ],
              "pending": [
                "672c9d44-370f-4045-a0b3-35ff9c5e6384"
              ],
              "skipped": [],
              "duration": 37128,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
              "title": "Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "with valid data (username)",
                  "fullTitle": "Automation Test Suite Login with valid data (username)",
                  "timedOut": null,
                  "duration": 2838,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\ncy.get('@data').then(data => {\n  myAccount.getUserName().type(data.UserName);\n  myAccount.getPassword().type(data.Password);\n  myAccount.getLoginButton().click();\n  myAccount.getWelcomeText().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Hello brd_u (not brd_u? Log out)');\n  });\n});",
                  "err": {},
                  "uuid": "c30bbf33-6d2e-415e-8363-339920296a8a",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "with valid data (e-mail adress)",
                  "fullTitle": "Automation Test Suite Login with valid data (e-mail adress)",
                  "timedOut": null,
                  "duration": 4295,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\ncy.get('@data').then(data => {\n  myAccount.getUserName().type(data.UserEmail);\n  myAccount.getPassword().type(data.Password);\n  myAccount.getLoginButton().click();\n  myAccount.getWelcomeText().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Hello brd_u (not brd_u? Log out)');\n  });\n});",
                  "err": {},
                  "uuid": "3d561d8d-bfe7-4906-813f-8505187faf3b",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with incorrect e-mail",
                  "fullTitle": "Automation Test Suite Login try with incorrect e-mail",
                  "timedOut": null,
                  "duration": 5840,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getUserName().type(`${data.UserEmail}${generator.randomString(2)}`);\n  myAccount.getPassword().type(data.Password);\n  myAccount.getLoginButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('ERROR: The username or password you entered is incorrect. Lost your password?');\n  });\n});",
                  "err": {},
                  "uuid": "7d87cac1-96c1-49a2-98da-345e57a34601",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with incorrect password",
                  "fullTitle": "Automation Test Suite Login try with incorrect password",
                  "timedOut": null,
                  "duration": 3441,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getUserName().type(data.UserEmail);\n  myAccount.getPassword().type(`${data.Password}${generator.randomString(2)}`);\n  myAccount.getLoginButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('ERROR: The username or password you entered is incorrect. Lost your password?');\n  });\n});",
                  "err": {},
                  "uuid": "3a22aa69-d01d-494f-8fc0-c04ff9861a32",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with blank password",
                  "fullTitle": "Automation Test Suite Login try with blank password",
                  "timedOut": null,
                  "duration": 2402,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getUserName().type(data.UserEmail);\n  myAccount.getLoginButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Error: The password field is empty.');\n  });\n});",
                  "err": {},
                  "uuid": "8beb4c65-f4ec-4a2b-a434-1ec54aa1ab53",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "try with blank e-mail adress",
                  "fullTitle": "Automation Test Suite Login try with blank e-mail adress",
                  "timedOut": null,
                  "duration": 3632,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const myAccount = new _MyAccount.default();\nconst generator = new _dataGenerator.default();\ncy.get('@data').then(data => {\n  myAccount.getPassword().type(data.Password);\n  myAccount.getLoginButton().click();\n  myAccount.getRegisterError().invoke('text').then(text => {\n    cy.expect(text.trim()).to.equal('Error: Username is required.');\n  });\n});",
                  "err": {},
                  "uuid": "4e5063b6-6e3b-4cf1-a69d-d74065d53ead",
                  "parentUUID": "cbd5768a-ff01-4a4c-aabc-4a7a1bc3e123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c30bbf33-6d2e-415e-8363-339920296a8a",
                "3d561d8d-bfe7-4906-813f-8505187faf3b",
                "7d87cac1-96c1-49a2-98da-345e57a34601",
                "3a22aa69-d01d-494f-8fc0-c04ff9861a32",
                "8beb4c65-f4ec-4a2b-a434-1ec54aa1ab53",
                "4e5063b6-6e3b-4cf1-a69d-d74065d53ead"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22448,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "reportFilename": "report",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": false
      },
      "version": "5.1.0"
    }
  }
}